<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>投资 on Zhang Jian&#39;s Homepage</title>
    <link>/tags/%E6%8A%95%E8%B5%84/</link>
    <description>Recent content in 投资 on Zhang Jian&#39;s Homepage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 21 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/%E6%8A%95%E8%B5%84/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>练习题答案3</title>
      <link>/post/2020/03/21/%E7%BB%83%E4%B9%A0%E9%A2%98%E7%AD%94%E6%A1%883/</link>
      <pubDate>Sat, 21 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/03/21/%E7%BB%83%E4%B9%A0%E9%A2%98%E7%AD%94%E6%A1%883/</guid>
      <description>题目1：给定三种债券当前价格、未来现金流和到期收益率，求第四种债券价格。思路:通过已知的三个债券，计算即期利率s1，s2，s3，利用即期利率来求未知的第四只债券的价格\[925.53 = \frac{c_1}{1+s_1}+\frac{1000}{1+s_1}\]\[991.26 = \frac{c_2}{1+s_1}+\frac{c_2}{(1+s_2)^2}+\frac{1000}{(1+s_2)^2} \]\[1004.99 =\frac{c_3}{1+s_1}+ \frac{c_3}{(1+s_2)^2}+\frac{c_3}{(1+s_3)^3}+\frac{1000}{(1+s3)^3}\]
显然上面的\(c_1\),\(c_2\),\(c_3\)也是已知的，我们可以求解s1，s2，s3.
我就直给第一题的答案了，第二题和之前内容类似# 第一个函数进行票息分离get_zero_coupon&amp;lt;-function(coupons=c(0,90,100),BondPrices=c(925.53,991.26,1004.99),nominal_value=1000){price_matrix &amp;lt;- matrix(0,nrow=length(coupons),ncol=length(coupons))for(i in 1:length(coupons)){price_matrix[i,1:i] &amp;lt;- coupons[i]}diag(price_matrix) &amp;lt;- diag(price_matrix) + nominal_value #大家思考一下这一步在干什么zero_coupon_prices&amp;lt;-solve(price_matrix,BondPrices) #这一步是矩阵求解return(zero_coupon_prices)}# 另一个函数c&amp;lt;-get_zero_coupon()get_price &amp;lt;- function(c_r, t , s_p , f =1000) {cf = matrix(c(rep(f*c_r,t)),nr=1)cf[t] = cf[t]+freturn(cf%*%s_p)}#运用函数get_price(c_r = 0.11,t=3,s_p = c)## [,1]## [1,] 1030.113get_price(c_r = 0.</description>
    </item>
    
    <item>
      <title>利率练习2</title>
      <link>/post/2020/03/16/%E5%88%A9%E7%8E%87%E7%BB%83%E4%B9%A02/</link>
      <pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/03/16/%E5%88%A9%E7%8E%87%E7%BB%83%E4%B9%A02/</guid>
      <description>题目背景你面临如下投资决策，现在支出70000万，投资期限为5年，每年的回报率为1万，现在的利率为5%，5年后投资结束，回收45000元，请问你是否应该参与这项投资？#首先加载包library(tidyverse)library(DT)#建立现金流cf &amp;lt;- tribble(~year, ~cf,0,-70000,1,10000,2,10000,3,10000,4,10000,5,55000)r &amp;lt;- 0.05cf %&amp;gt;%mutate(pv =cf/(1+r)^year) %&amp;gt;% datatable(rownames = F,caption = &amp;#39;这项投资的现金流表&amp;#39;,colnames = c(&amp;#39;年份&amp;#39;,&amp;#39;现金流&amp;#39;,&amp;#39;现值&amp;#39;)){&#34;x&#34;:{&#34;filter&#34;:&#34;none&#34;,&#34;caption&#34;:&#34;这项投资的现金流表&#34;,&#34;data&#34;:[[0,1,2,3,4,5],[-70000,10000,10000,10000,10000,55000],[-70000,9523.80952380952,9070.2947845805,8638.37598531476,8227.02474791882,43093.9391557652]],&#34;container&#34;:&#34;\n \n \n 年份\n 现金流\n 现值\n \n \n&#34;,&#34;options&#34;:{&#34;columnDefs&#34;:[{&#34;className&#34;:&#34;dt-right&#34;,&#34;targets&#34;:[0,1,2]}],&#34;order&#34;:[],&#34;autoWidth&#34;:false,&#34;orderClasses&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}#计算npvnpv &amp;lt;- cf %&amp;gt;%mutate(pv =cf/(1+r)^year) %&amp;gt;% select(pv) %&amp;gt;%sum()if (npv&amp;gt;0){paste(&amp;quot;该项的npv为：&amp;quot;,npv,&amp;#39;,可行！&amp;#39;)}else {paste(&amp;quot;该项的npv为：&amp;quot;,npv,&amp;#39;,不可行！&amp;#39;)}## [1] &amp;quot;该项的npv为： 8553.44419738884 ,可行！&amp;quot;真实利率计算，名义利率为4%，计算半年计息，月度计息的真实利率,我们知道有一个公式\[(1+sr/n)^n=1+r\]</description>
    </item>
    
  </channel>
</rss>